import {	motion,	useMotionValueEvent,	useScroll,	useTransform,} from 'framer-motion';import * as React from 'react';import { useEffect, useRef, useState } from 'react';export type HeroFillerProps = {	img: string;	text?: string;};export const HeroFiller: React.FC<HeroFillerProps> = ({ img, text }) => {	const imgRef = useRef<HTMLImageElement>(null);	const { scrollYProgress } = useScroll({ target: imgRef });	const blurMv = useTransform(		scrollYProgress,		[1, 0],		['blur(10px)', 'blur(0px)'],	);	useMotionValueEvent(scrollYProgress, 'change', (val) => {		console.log(val);	});	return (		<section>			<div className={'relative h-[50vh] w-full origin-bottom '}>				<motion.img					style={{						filter: blurMv,					}}					ref={imgRef}					src={img}					alt={''}					className={						'size-full origin-bottom object-cover object-center'					}				/>				<div					className={						'absolute top-0 flex h-[50vh] w-full items-center justify-center'					}				>					{text && (						<h1							className={								'relative p-16 font-primary text-7xl font-bold tracking-wide text-white'								// cn(								// 	'relative p-16 font-primary text-7xl font-bold text-transparent bg-clip-text bg-hero bg-cover bg-center bg-no-repeat',								// 	'before:absolute before:content-[""] before:z-[-2] before:inset-0 before:bg-inherit',								// 	'after:absolute after:content-[""] after:inset-10 after:inline-block after:bg-white  after-z[-1]',								// )							}						>							{text}						</h1>					)}				</div>			</div>		</section>	);};