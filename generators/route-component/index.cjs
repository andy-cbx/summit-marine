const path = require('path');const fs = require('fs');const routesDir = path.join(process.cwd(), 'src/routes');const routes = fs.readdirSync(routesDir);const listRouteFiles = (route) => {	const p = `${routesDir}/${route}`;	return fs.readdirSync(p);}const listFiles = (route, dir) => {	const p = `${routesDir}/${route}/${dir}`;	return fs.readdirSync(p);}let routeName = '';let addList = [];/** * * @type {import('plop').PlopGenerator} */module.exports = {	description: 'Route Component Generator',	prompts: [		{			type: 'input',			name: 'name',			message: 'component name',		},		{			type: 'list',			name: 'route',			message: 'Which route does this component belong to?',			choices: [...routes],			when: () => routes.length > 0,		},		{			type: 'confirm',			name: 'addImport',			message: 'Add import?',		},		{			type: 'list',			name: 'importSelect',			message: 'Select file',			choices: ({ route }) => [...listRouteFiles(route)],			when: ({ addImport }) => addImport,		},		{			type: 'list',			name: 'importFile',			message: 'Select file',			choices: ({ importSelect, route }) => [...listFiles(route, importSelect)],			when: ({ addImport, importSelect, route }) => addImport && importSelect !== `${route}-route.tsx` && listFiles(route, importSelect).length > 0,		},	],	actions: (answers) => {		const componentGeneratePath = 'src/routes/{{route}}/components';		let importPath = `src/routes/{{route}}/{{importSelect}}`;		if(answers.importFile ) importPath.append(`/{{importFile}}`);		console.log('importPath ==', importPath);		return [			{				type: 'add',				path:					componentGeneratePath +					'/{{kebabCase name}}.tsx',				templateFile: 'generators/route-component/route-component.hbs',			},			{				// Action type 'append' injects a template into an existing file				type: 'append',				path: importPath,				// Pattern tells plop where in the file to inject the template				pattern: `/* PLOP_INJECT_IMPORT */`,				template: `import { {{properCase name}} } from '@/routes/{{route}}/components/{{kebabCase name}}';`,				when: ({addImport}) => addImport,			},		];	},};